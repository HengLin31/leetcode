package pers.henglin.leetcode;

import pers.henglin.leetcode.array.*;
import pers.henglin.leetcode.backtracking.*;
import pers.henglin.leetcode.dp.*;
import pers.henglin.leetcode.hash.*;
import pers.henglin.leetcode.linkedlist.*;
import pers.henglin.leetcode.math.*;
import pers.henglin.leetcode.string.*;
import pers.henglin.leetcode.tree.*;

public class LeetcodeList {
    private void questionNumber(){
        TwoSum                                              no001;
        AddTwoNumbers                                       no002;
        LongestSubstringWithoutRepeatingCharacters          no003;
        MedianOfTwoSortedArrays                             no004;
        LongestPalindromicSubstring                         no005;
        ZigZagConversion                                    no006;
        ReverseInteger                                      no007;
        StringToInteger                                     no008;
        PalindromeNumber                                    no009;
        RegularExpressionMatching                           no010;
        ContainerWithMostWater                              no011;
        IntegerToRoman                                      no012;
        RomanToInteger                                      no013;
        LongestCommonPrefix                                 no014;
        ThreeSum                                            no015;
        ThreeSumClosest                                     no016;
        LetterCombinationsOfAPhoneNumber                    no017;
        FourSum                                             no018;
        RemoveNthNodeFromEndOfList                          no019;
        ValidParentheses                                    no020;
        MergeTwoSortedLists                                 no021;
        GenerateParentheses                                 no022;
        MergeKSortedLists                                   no023;
        SwapNodesInPairs                                    no024;
        ReverseNodesInKGroup                                no025;
        RemoveDuplicatesFromSortedArray                     no026;
        RemoveElement                                       no027;
        ImplementStrStr                                     no028;
        DivideTwoIntegers                                   no029;
        SubstringWithConcatenationOfAllWords                no030;
        NextPermutation                                     no031;
        LongestValidParentheses                             no032;
        SearchInRotatedSortedArray                          no033;
        FindFirstAndLastPositionOfElementInSortedArray      no034;
        SearchInsertPosition                                no035;
        ValidSudoku                                         no036;
        SudokuSolver                                        no037;
        CountAndSay                                         no038;
        CombinationSum                                      no039;
        CombinationSumII                                    no040;
        FirstMissingPositive                                no041;
        TrappingRainWater                                   no042;
        MultiplyStrings                                     no043;
        WildcardMatching                                    no044;
        JumpGameII                                          no045;
        Permutations                                        no046;
        PermutationsII                                      no047;
        RotateImage                                         no048;
        GroupAnagrams                                       no049;
        PowXN                                               no050;
        NQueens                                             no051;
        NQueensII                                           no052;
        MaximumSubarray                                     no053;
        SpiralMatrix                                        no054;
        JumpGame                                            no055;
        MergeIntervals                                      no056;
        InsertInterval                                      no057;
        LengthOfLastWord                                    no058;
        SpiralMatrixII                                      no059;
        PermutationSequence                                 no060;
        RotateList                                          no061;
        UniquePaths                                         no062;
        UniquePathsII                                       no063;
        MinimumPathSum                                      no064;
        ValidNumber                                         no065;
        PlusOne                                             no066;
        AddBinary                                           no067;
        TextJustification                                   no068;
        SqrtX                                               no069;
        ClimbingStairs                                      no070;
        SimplifyPath                                        no071;
        EditDistance                                        no072;
        SetMatrixZeroes                                     no073;
        SearchA2DMatrix                                     no074;
        SortColors                                          no075;
        MinimumWindowSubstring                              no076;
        Combinations                                        no077;
        Subsets                                             no078;
        WordSearch                                          no079;
        RemoveDuplicatesFromSortedArrayII                   no080;
        SearchInRotatedSortedArrayII                        no081;
        RemoveDuplicatesFromSortedListII                    no082;
        RemoveDuplicatesFromSortedList                      no083;
        LargestRectangleInHistogram                         no084;
        MaximalRectangle                                    no085;
        PartitionList                                       no086;
        ScrambleString                                      no087;
        MergeSortedArray                                    no088;
        GrayCode                                            no089;
        SubsetsII                                           no090;
        DecodeWays                                          no091;
        ReverseLinkedListII                                 no092;
        RestoreIPAddresses                                  no093;
        BinaryTreeInorderTraversal                          no094;
        UniqueBinarySearchTreesII                           no095;
        UniqueBinarySearchTrees                             no096;
        InterleavingString                                  no097;
        ValidateBinarySearchTree                            no098;
        RecoverBinarySearchTree                             no099;
        SameTree                                            no100;
        SymmetricTree                                       no101;
        BinaryTreeLevelOrderTraversal                       no102;
        BinaryTreeZigzagLevelOrderTraversal                 no103;
        MaximumDepthOfBinaryTree                            no104;
        ConstructBinaryTreeFromPreorderAndInorderTraversal  no105;
        ConstructBinaryTreeFromInorderAndPostorderTraversal no106;
        BinaryTreeLevelOrderTraversalII                     no107;
        ConvertSortedArrayToBinarySearchTree                no108;
        ConvertSortedListToBinarySearchTree                 no109;
        BalancedBinaryTree                                  no110;
        MinimumDepthOfBinaryTree                            no111;
        PathSum                                             no112;
        PathSumII                                           no113;
        FlattenBinaryTreeToLinkedList                       no114;
        DistinctSubsequences                                no115;
        PopulatingNextRightPointersInEachNode               no116;
        PopulatingNextRightPointersInEachNodeII             no117;
        PascalsTriangle                                     no118;
        PascalsTriangleII                                   no119;
        Triangle                                            no120;
        BestTimeToBuyAndSellStock                           no121;
        BestTimeToBuyAndSellStockII                         no122;
        BestTimeToBuyAndSellStockIII                        no123;

        BinaryTreePreorderTraversal                         no144;
    }
}
